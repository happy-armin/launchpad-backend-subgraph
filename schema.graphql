type IDOCreated @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  idoPool: Bytes! # address
  rewardToken: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type addedToBlock @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type removedFromBlock @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Pool @entity {
  id: ID!
  holder: Bytes!
  rewardToken: Bytes!
  buyToken: Bytes!
  price: BigInt!
  softCap: BigInt!
  hardCap: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  claimTime: BigInt!
  ipfsUrl: String
}

type Stake @entity {
  id: ID!
  holder: Bytes!
  amount: BigInt!
}

type Refund @entity {
  id: ID!
  holder: Bytes!
}

type Claim @entity {
  id: ID!
  holder: Bytes!
  amount: BigInt!
}
